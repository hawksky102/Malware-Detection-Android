package com.app.phonecleaner;

import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.app.ActivityCompat;
import androidx.fragment.app.Fragment;
import androidx.localbroadcastmanager.content.LocalBroadcastManager;

import android.app.Dialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.content.pm.PackageManager;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;

import com.app.phonecleaner.Fragment.FragmentBoost;
import com.app.phonecleaner.Fragment.FragmentClean;
import com.app.phonecleaner.Fragment.FragmentResults;
import com.app.phonecleaner.Fragment.FragmentScan;
import com.app.phonecleaner.Fragment.FragmentStorage;
import com.app.phonecleaner.Fragment.FragmentSecurity;
import com.app.phonecleaner.Service.BackgroundService;

public class MainActivity extends AppCompatActivity implements View.OnClickListener,FragmentSecurity.OnCallbackReceived{
    ImageButton storage,security,cleaner,boost, scan, settings;
    SharedPreferences preferences;
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
    ConstraintLayout layout;
    public static final String FILTER_ACTION_KEY = "virus_malware";
    public static boolean runThread = true;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        getSupportActionBar().hide();
        setContentView(R.layout.activity_main);
        storage=findViewById(R.id.buttonStorage);
        security=findViewById(R.id.buttonSecurity);
        cleaner=findViewById(R.id.buttonCleaner);
        boost=findViewById(R.id.buttonBoost);
        scan=findViewById(R.id.buttonClean);
        settings=findViewById(R.id.buttonSettings);
        layout=findViewById(R.id.constraint);
        storage.setOnClickListener(this);
        security.setOnClickListener(this);
        scan.setOnClickListener(this);
        settings.setOnClickListener(this);
        cleaner.setOnClickListener(this);
        boost.setOnClickListener(this);
        loadFragment(new FragmentSecurity());
        configureComponents();
        preferences= PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        editor=preferences.edit();
        sharedPreferences = getSharedPreferences("default_settings", Context.MODE_PRIVATE);

//        Intent intent = new Intent(MainActivity.this, IntentServiceBackground.class);
//        intent.putExtra("message", "run");
//        startService(intent);
//        runThread = true ;
        checkProtection();
//        ActivityCompat.requestPermissions(MainActivity.this,
//                new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},
//                1);
    }
    private void configureComponents(){

    }
    private boolean loadFragment(Fragment fragment) { //Switch fragments
        //switching fragment
        if (fragment != null) {
            getSupportFragmentManager()
                    .beginTransaction()
                    .setCustomAnimations(android.R.anim.fade_in, android.R.anim.fade_out) // Fade in/out animation
                    .replace(R.id.fragment_container, fragment)
                    .commit();
            return true;
        }
        return false;
    }

    @Override
    public void onClick(View view) { //Bottom buttons for fragment
        switch (view.getId()) {
            case R.id.buttonStorage:
                loadFragment(new FragmentStorage());
                break;
            case R.id.buttonCleaner:
                loadFragment(new FragmentClean());
                break;
            case R.id.buttonSecurity:
                loadFragment(new FragmentSecurity());
                break;
            case R.id.buttonBoost:
                loadFragment(new FragmentBoost());
                break;
            case R.id.buttonClean:
                loadFragment(new FragmentScan());
                break;
            case R.id.buttonSettings:
                showSettingsDialog();
                break;
        }
    }

    private void checkProtection(){ //This function checks, is user pressed protection button before?
        if(preferences.getBoolean("Protected",false)) {
            layout.setBackgroundResource(R.drawable.background_protected_shape);
            startService(new Intent(this, BackgroundService.class));
        }
    }
    @Override
    public void protection(boolean isProtected) {  //This is callback from FragmentSecurity for change background.
        if(isProtected) {
            layout.setBackgroundResource(R.drawable.background_protected_shape);
            editor.putBoolean("Protected",true);
            editor.commit();
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putInt("serviceget", 1);
            editor.commit();
            startService(new Intent(this, BackgroundService.class));
        }
        else {
            layout.setBackgroundResource(R.drawable.background_not_protected_shape);
            editor.putBoolean("Protected",false);
            editor.commit();
            stopService(new Intent(this, BackgroundService.class));
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putInt("serviceget", 2);
            editor.commit();
        }
    }

    public void showSettingsDialog(){
        final Dialog dialog = new Dialog(this);
        dialog.setContentView(R.layout.custom_setting_dialog);
        dialog.setCanceledOnTouchOutside(false);
        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        EditText textTime = dialog.findViewById(R.id.timebackground);
        EditText textData = dialog.findViewById(R.id.mbbackground);
        String time_get = sharedPreferences.getString("timing", null);
        String data_get = sharedPreferences.getString("data", null);
        if(time_get != null && data_get != null){
            textTime.setText(time_get);
            textData.setText(data_get);
        }
        Button saveBtn = dialog.findViewById(R.id.btn_got);
        saveBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if(textTime.getText().toString().matches("") && textData.getText().toString().matches("")){
                    Toast.makeText(getApplicationContext(),"Please fill all fields",Toast.LENGTH_LONG).show();
                }
                else{
                    SharedPreferences.Editor editor = sharedPreferences.edit();
                    editor.putString("timing", textTime.getText().toString());
                    editor.putString("data", textData.getText().toString());
                    editor.commit();
                    Toast.makeText(getApplicationContext(),"Settings Saved",Toast.LENGTH_LONG).show();
                    dialog.dismiss();
                }
            }
        });
        dialog.show();
    }

    @Override
    public void onDestroy() {
        /* IF YOU WANT THIS SERVICE KILLED WITH THE APP THEN UNCOMMENT THE FOLLOWING LINE */
        //handler.removeCallbacks(runnable);
        super.onDestroy();
        startService(new Intent(this, BackgroundService.class));
    }

    @Override
    public void onBackPressed() {
       // super.onBackPressed();
//        startActivity(new Intent(MainActivity.this, MainActivity.class));
    }
    /*
    * I used callback because when I trying to change background from fragment,
    * It didn't work,
    * so FragmentSecurity class can trigger for changing background with this callback.
    * */

}
